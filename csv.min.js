class csvJS{constructor(t=",",e="\n"){return this.COMMA=",",this.SEMI_COMMA=";",this.COLON=":",this.BAR="|",this.TAB="\t",this.NL="\n",this.JSON_OPTION_REGULAR=1,this.JSON_OPTION_TRANSPOSE=2,this.setSplice=void 0!==t?t:this.COMMA,this.setEOF=void 0!==e?e:this.NL,this.results,this}fromFile(t,e=0){const s=this.setSplice,r=this.setEOF,i=[],n=[],c=new XMLHttpRequest;if(!t.match(/\.csv$/))throw new TypeError("Your file must be a CSV file");return c.onreadystatechange=function(){if(4===this.readyState&&200==this.status){let t=this.responseText;t=t.replaceAll("\r","").trim();const c=t.split(r);for(let t=0;t<c.length;t++)if(0==t)c[t].split(s).forEach((t=>{n.push(t.trim())}));else if(!Array.isArray(e)&&t!=e||Array.isArray(e)&&!e.includes(t)){const e=new Object;for(let r=0;r<n.length;r++){c[t]=c[t].replace(new RegExp(s+"$"),"");const i=c[t].split(s);e[n[r]]=i[r].trim()}i.push(e)}}},c.open("GET",t,!1),c.send(),this.results=i,this}fromString(t,e=0){let s=t;const r=this.setSplice,i=this.setEOF,n=[],c=[];s=s.replaceAll("\r","").trim();const l=s.split(i);for(let t=0;t<l.length;t++)if(0==t)l[t].split(r).forEach((t=>{c.push(t.trim())}));else if(!Array.isArray(e)&&t!=e||Array.isArray(e)&&!e.includes(t)){const e=new Object;for(let s=0;s<c.length;s++){l[t]=l[t].replace(new RegExp(r+"$"),"");const i=l[t].split(r);e[c[s]]=i[s].trim()}n.push(e)}return this.results=n,this}toTable(t,e){t=t.results;const s=document.createElement("table"),r=document.createElement("thead"),i=document.createElement("tbody"),n=document.createElement("tr"),c=Object.keys(t[0]);if("object"!=typeof t)throw new TypeError("Argument must be an object");c.forEach((t=>{const e=document.createElement("th");e.innerText=t,n.appendChild(e)})),r.appendChild(n),s.appendChild(r);for(let e=0;e<t.length;e++){const s=Object.values(t[e]),r=document.createElement("tr");for(let t=0;t<s.length;t++){const e=document.createElement("td");e.innerText=s[t],r.appendChild(e)}i.appendChild(r)}s.appendChild(i),document.querySelector(e).appendChild(s)}toCSV(t){if(!(t instanceof csvJS))throw new TypeError("Must be a csvJS object");t=t.results;let e="",s=Object.keys(t[0]);return e+=s.join(this.setSplice)+this.setEOF,t.forEach((t=>{const s=Object.values(t);e+=s.join(this.setSplice).trim()+this.setEOF})),e=e.replace(new RegExp(this.setEOF+"$"),""),e}#t(t){let e={};for(let s=0;s<1;s++)Object.keys(t[s]).forEach((t=>{e[t]=[]}));for(let s=0;s<t.length;s++)Object.keys(t[s]).forEach((r=>{e[r].push(t[s][r])}));return e}toJSON(t,e){if(!(t instanceof csvJS))throw new TypeError("Must be a csvJS object");let s;switch(t=t.results,e){case this.JSON_OPTION_REGULAR:s=JSON.stringify(t);break;case this.JSON_OPTION_TRANSPOSE:s=this.#t(t)}return s}}
